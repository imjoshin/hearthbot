# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  #######
  # API #
  #######

  api-setup:
    runs-on: ubuntu-latest
    defaults:
       run:
         working-directory: ./packages/api/
    strategy:
      matrix:
        node-version: [18.x]
    outputs:
      has_files_changed: ${{ steps.validate-files.outputs.has_files_changed }}
    steps:
    - name: Checkout repo
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Get root changed files
      id: changed-files-root
      uses: tj-actions/changed-files@v29.0.1
      with:
        since_last_remote_commit: "true"
        path: ./.github

    - name: Get package changed files
      id: changed-files-package
      uses: tj-actions/changed-files@v29.0.1
      with:
        since_last_remote_commit: "true"
        path: ./packages/api"

    - name: Validate changed files
      id: validate-files
      run: |
        for file in ${{ steps.changed-files-root.outputs.all_changed_and_modified_files }}; do
          echo ::set-output name=has_files_changed::1
          return 
        done

        for file in ${{ steps.changed-files-package.outputs.all_changed_and_modified_files }}; do
          echo ::set-output name=has_files_changed::1
          return
        done

  api-build:
    needs: api-setup
    if: needs.api-setup.outputs.has_files_changed == 1
    runs-on: ubuntu-latest
    defaults:
       run:
         working-directory: ./packages/api/
    strategy:
      matrix:
        node-version: [18.x]
    steps:
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'yarn'
        cache-dependency-path: ./packages/api/yarn.lock

    - run: yarn install
    - run: yarn build

  # bot-build:
  #   runs-on: ubuntu-latest
  #   defaults:
  #      run:
  #        working-directory: ./packages/bot/
  #   strategy:
  #     matrix:
  #       node-version: [18.x]
  #   steps:
  #   - uses: actions/checkout@v3
  #   - name: Use Node.js ${{ matrix.node-version }}
  #     uses: actions/setup-node@v3
  #     with:
  #       node-version: ${{ matrix.node-version }}
  #       cache: 'yarn'
  #       cache-dependency-path: ./packages/bot/yarn.lock
  #   - run: yarn install
  #   - run: yarn build
  # scrape-build:
  #   runs-on: ubuntu-latest
  #   defaults:
  #      run:
  #        working-directory: ./packages/scrape/
  #   strategy:
  #     matrix:
  #       node-version: [18.x]
  #   steps:
  #   - uses: actions/checkout@v3
  #   - name: Use Node.js ${{ matrix.node-version }}
  #     uses: actions/setup-node@v3
  #     with:
  #       node-version: ${{ matrix.node-version }}
  #       cache: 'yarn'
  #       cache-dependency-path: ./packages/scrape/yarn.lock
  #   - run: yarn install
  #   - run: yarn build
  # sync-build:
  #   runs-on: ubuntu-latest
  #   defaults:
  #      run:
  #        working-directory: ./packages/sync/
  #   strategy:
  #     matrix:
  #       node-version: [18.x]
  #   steps:
  #   - uses: actions/checkout@v3
  #   - name: Use Node.js ${{ matrix.node-version }}
  #     uses: actions/setup-node@v3
  #     with:
  #       node-version: ${{ matrix.node-version }}
  #       cache: 'yarn'
  #       cache-dependency-path: ./packages/sync/yarn.lock
  #   - run: yarn install
  #   - run: yarn build
